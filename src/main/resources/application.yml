spring:
  profiles:
    group: # Run - Edit Configurations - Active Profiles에서 [oracle] 설정
      oracle: common, oracle
      mysql: common, mysql

    active: oracle
---

# 공통 설정
spring:
  config:
    activate:
      on-profile: common
  application:
    name: demo
  # mvc Settings
  mvc:
    view:
      suffix: .html
      prefix: classpath:/templates/

  # Multipart Settings
  servlet:
    multipart:
      enabled: true

  # Security Settings
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-name: kakao
            #현주
            #client-id: 379ae6393980b6440682f3ea849bce20
            #redirect-uri: http://localhost:9000/login/kakao/callback

            #최건
            client-id: c6b9f677567dc977d7f9c94dd4cc157f
            redirect-uri: http://localhost:3000/login/kakao/callback
            authorization-grant-type: authorization_code
            scope: profile, account_email

          naver:
            client-name: naver
            #현주
            #client-id: ZP3gYm5NtFceF4WXw_Xp
            #client-secret: oWp2a7oEEa
            #redirect-uri: http://localhost:9000/login/naver/callback

            #최건
            client-id: dLKPNhcR1nB4hOCwthgj
            client-secret: 6FoqEHjoc8
            redirect-uri: http://localhost:3000/login/naver/callback
            authorization-grant-type: authorization_code

        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            issuer-uri: https://kauth.kakao.com
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            issuer-uri: https://kauth.kakao.com
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: id

  # OAuth2 Settings
  OAuth2:
    kakao:
      logout:
        url: https://kauth.kakao.com/oauth/logout
        callback-logout-url: http://localhost:9000/logout/kakao/callback

    naver:
      logout:
        url: https://nid.naver.com/oauth2.0/token
        callback-logout-url: http://localhost:9000/logout/naver/callback


springdoc:
  swagger-ui:
    path: /swagger-ui.html
    groups-order: DESC
    operationsSorter: method
    disable-swagger-default-url: true
    display-request-duration: true
  api-docs:
    path: /api-docs
  show-actuator: true
  default-consumes-media-type: application/json
  default-produces-media-type: application/json
  paths-to-match:
    - /**


# HTTP Encoding Settings
server:
  port: 9000
  servlet:
    encoding:
      charset: UTF-8
      enabled: true
      force: true



# JWT Settings
jwt:
  secret-key: ifchrKYibQQgkW7g-*k.ap9k0483Hb9wdXoBT4vnt4P3sJWt-Nu

---


# oracle 프로필 데이터베이스 설정
spring:
  config:
    activate:
      on-profile: oracle
  datasource:
    driver-class-name: oracle.jdbc.OracleDriver
    url: jdbc:oracle:thin:@localhost:1521:xe
    username: gangchew
    password: gangchew
    hikari:
      connection-timeout: 60000  # 60 seconds (in milliseconds)
      maximum-pool-size: 20
  sql:
    init:
      platform: oracle
  jpa:
    database-platform: org.hibernate.dialect.Oracle12cDialect
    hibernate:
      ddl-auto: none
      # create, update, create-drop, none 등의 옵션이 있습니다.
      # create: 기존테이블 삭제 후 다시 생성
      # update: 변경된 부분만 반영
      # create-drop: create와 같으나 종료 시점에 테이블 DROP
      # none: 사용하지 않음
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
      use-new-id-generator-mappings: false
    # DDl 생성 시 데이터베이스 고유의 기능 사용여부
    generate-ddl: false
    # 실행되는 쿼리문 보여주기 여부
    show-sql: false
    properties:
      hibernate:
        format_sql: false

---


# mysql 프로필 데이터베이스 설정
spring:
  config:
    activate:
      on-profile: mysql
  datasource:
    #mysql 8
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://158.180.89.135:3306/final
    username: hjlee
    password: Oracle123456789!
  sql:
    init:
      platform: mysql
  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: none
      # create, update, create-drop, none 등의 옵션이 있습니다.
      # create: 기존테이블 삭제 후 다시 생성
      # update: 변경된 부분만 반영
      # create-drop: create와 같으나 종료 시점에 테이블 DROP
      # none: 사용하지 않음
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    # DDl 생성 시 데이터베이스 고유의 기능 사용여부
    generate-ddl: false
    # 실행되는 쿼리문 보여주기 여부
    show-sql: false
    properties:
      hibernate:
        format_sql: false


---